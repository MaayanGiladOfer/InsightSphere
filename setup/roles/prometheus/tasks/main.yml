---
- include_vars: ../../../values.yml

- name: Add the Prometheus helm repository
  ansible.builtin.shell: helm repo add "{{ prometheus_release_name }}" \ 
                                       "{{  prometheus_chart_url }}"

- name: Update repositories list
  ansible.builtin.shell: helm repo update

- name: Check the list of installed Helm Charts
  ansible.builtin.shell: helm ls -q
  register: helm_charts

- name: Installing the Prometheus helm chart if not exists
  ansible.builtin.shell: >
    helm install "{{ prometheus_chart_name }}" \
    "{{ prometheus_release_name }}/{{ prometheus_chart_name }}"
    --set prometheus-node-exporter.enabled=false \
    --set prometheus-pushgateway.enabled=false \
    --set kube-state-metrics.enabled=false
  when: prometheus_chart_name not in helm_charts.stdout

- name: Check the Nginx Ingress IP address
  ansible.builtin.shell: kubectl get svc nginx-ingress-controller -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'
  register: nginx_ingress_ip
  
- name: Check if the Prometheus server URL is in /etc/hosts
  ansible.builtin.command: "grep -q '{{ nginx_ingress_ip.stdout }}    {{ prometheus_url }}' /etc/hosts"
  register: grep_result
  ignore_errors: true

- name: Add the Prometheus server URL to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ nginx_ingress_ip.stdout }}    {{ prometheus_url }}"
  when: grep_result.rc != 0

- name: Check if the AlertManager server URL is in /etc/hosts
  ansible.builtin.command: "grep -q '{{ nginx_ingress_ip.stdout }}    {{ alertmanager_url }}' /etc/hosts"
  register: grep_result
  ignore_errors: true

- name: Add the AlertManager server URL to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ nginx_ingress_ip.stdout }}    {{ alertmanager_url }}"
  when: grep_result.rc != 0

